//I wil create the structure of a linked list, including data, node and the next node for a pointer
//I will create an application that calls the methods to traver the link list
//I will create a method to create a linked list
//I will create a traveral method to print the linked list

import java.util.LinkedList;
import java.util.ListIterator;

public class LinkedList {
 
	public static void main(String[] args) {
	       LinkedList<String> linkedList = new LinkedList<String>(); //notice that in C++, we create a node outside the app
	        linkedList.add("a"); //add is a default class under linkedlist
	        linkedList.add("b");
	        linkedList.add("c");
	        linkedList.add("d");
	        linkedList.add("e");
	        linkedList.add("f");
 
	        System.out.println("ListIterator Approach: ");
	        ListIterator<String> listIterator = linkedList.listIterator(); //you can find Iterator under the ListIterator package
	        while (listIterator.hasNext()) {
	            System.out.println(listIterator.next());
	        }
 
	        System.out.println("\nIterative Approach: ");
	//I will try to traverse using recursion
	        for (int i = 0; i < linkedList.size(); i++) {
	            System.out.println(linkedList.get(i));
	        }
	}
}
